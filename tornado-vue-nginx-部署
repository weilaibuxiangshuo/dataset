一、前期工作
nginx,mysql,virtualenv安装方式就不在讲了，自行查阅其它文档

1.vue打包
    *注意vue-cli打包是不会把devServer代理打包进去的，因为devServer只用于开发环境，所以，nginx不用考虑vue代理设置的问题
    *但vue中打包的时候，baseURL设置非常重要，会影响到nginx设置，如果baseURL有设置加/api,vue所有访问请求都会加上/api，所以要分清楚
    第一：vue在打包之前先安装插件
    npm install --save-dev compression-webpack-plugin

    第二：设置vue.config.js
    首先引：
    const CompressionPlugin = require("compression-webpack-plugin")
    const path = require("path");
    const productionGzipExtensions = ['js', 'css'];
    找到module.exports中的configureWebpack对象里面，添加如下：
        plugins: [
          new CompressionPlugin({
            algorithm: 'gzip',
            test: new RegExp('\\.(' + productionGzipExtensions.join('|') + ')$'),
            threshold: 10240, //内容超过10KB进行压缩
            deleteOriginalAssets:true,  //会删除原文件
          })
        ],
    第三：找到utils里面的request.js，修改baseURL为baseURL="/api"，因为后期nginx会设置一个/api，所以这边先设置好

    第四：打包并上传到相应服务器
    
2.nginx配置
    upstream tornadoes {
        server 127.0.0.1:8088;
        }
   
    server {
        listen       80;#默认端口是80，如果端口没被占用可以不用修改
        server_name  localhost;

        #charset koi8-r;

        root        /home/ceshi/dist/;

        location / {
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;   
        }
        location /static {                 #这里也要特别注意，vue打包为gzip模式，需要设置访问的静态目录，如没有设置，让vue自动渲染，会报语法错误
        alias /home/ceshi/dist/static/; 
        }
        location /api/ {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://tornadoes/;     #注意反代网址后面有加斜杠(/)，代表/api/是不会添加到uri后面，像alias一样效果，因为上面vue打包有加/api，tornado项目的路由是没有加/api,
                                              #所以这边要设置最后有带/,
        }

  }

3.supervisor安装与配置（这个程序只支持python2，支持python3要网上找，这里虚拟机外层是python2，虚拟机内层是python3，所以不影响，用外层驱动内层）
   *注意：如果项目重新更新，需要先停止supervisor，用kill停止进程，并且到/var/run/supervisor/下面把对应supervisor.sock删除，启动的时候supervisor会在生成
   *如果不删除，项目更新后，直接启动会报错

   yum install epel-release
   yum install -y supervisor
   
   生成配置文件
   echo_supervisord_conf > etc/supervisord.conf
   
   修改配置文件：vim /etc/supervisord.conf，将这几行的注释放开
   [inet_http_server]         ; inet (TCP) server disabled by default
   port=*:9001        ; (ip_address:port specifier, *:port for all iface)
   username=user              ; (default is no username (open server))
   password=123               ; (default is no password (open server))
   意思是将web服务页面打开，需要注意ip地址要写*，否则外网访问不了，而username和password就是登录服务页面的用户名和密码，可以改的复杂一点，另外阿里云也需要向外网暴露一下9001端口
   
   创建命令文件：在此目录下/etc/supervisord.d创建 ceshi.ini (文件名可以随便，后缀必须为.ini)，并写入下面命令
   *由于command一般只能写一条，因为tornado程序是在virtualenv中，所有需要先激活虚拟环境，要写多行命令，之前测试有写一个.sh文件，在执行此方法不通，最后通过如下实现
   *使用/bin/bash -c 来执行，可以将多条命令通过&&拼接实现，启动的时候会有一个主进程跟子进程（子进程是python server.py）,所以，要设置stopasgroup跟killasgroup为真，停止或删除连同子进程一起操作
   *如果没有设置上面两个，子进程是不是停止或者删除，下次启动会报错，director是设置启动时supervisor先跳转到的目录，其它功能自行查看supervisor具体教程   
   [program:mytornado]
   command=/bin/bash -c "export WORKON_HOME=/home/.virtualenvs&&source /usr/bin/virtualenvwrapper.sh&&workon tornado1&&python server.py"
   director=/home/project/main   
   autorestart=true
   user=root
   ;启动 5 秒后没有异常退出，就当作已经正常启动了
   startsecs = 5       
   stopasgroup=true
   killasgroup=true
   
   指定配置文件使用-c
   supervisord -c /etc/supervisord.conf
   
   重启配置文件
   supervisorctl reload
   
4.tornado注意事项
   1.由于tornado是使用python直接启用，会出现加不到模块，所以，文件之间都要是__init__.py是包文件，并且在server.py主文件开头，需要把当前主项目的路径加到系统中
   import os,sys
   mainpath = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))   #根据目录结构调整
   sys.path.append(mainpath)
   
   2.mysql数据连接的问题，有报 Warning: (3090, "Changing sql mode 'NO_AUTO_CREATE_USER' is deprecated
   网上的解决方法，测试有效：
   第一种方法：登录mysql后执行命令
   set @@GLOBAL.sql_mode='';
   set sql_mode ='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
   set @@sql_mode ='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
   
   第二种方法：修改mysql文件下
   在my.cnf 里面设置
   sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
   
   
